openapi: 3.0.0
info:
  title: Corner Table - API docs
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/v1
    description: Local development server

paths:
  /users/authenticate:
    post:
      summary: Authenticate user credentials and return a JWT token and a cookie with a refresh token
      operationId: authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "jason"
                password:
                  type: string
                  example: "pass123"
              required:
                - email
                - password
      responses:
        "200":
          description: User details, a JWT access token and a refresh token cookie
          headers:
            Set-Cookie:
              description: "`refreshToken`"
              schema:
                type: string
                example: refreshToken=51872eca5efedcf424db4cf5afd16a9d00ad25b743a034c9c221afc85d18dcd5e4ad6e3f08607550; Path=/; Expires=Tue, 16 Jun 2020 09:14:17 GMT; HttpOnly
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "5eb12e197e06a76ccdefc121"
                  authentication:
                    type: object
                    properties:
                      password: 
                        type: string
                        example: Test@123
                      salt:
                        type: string
                        example: cWlEQoX/mHGxCZSx9AuyO2VWgCLDR7owekKeiig6i5TZbb5CFnGDEgNl2J/i97CYfXi3bfScEEWcDQzOQzCFix0iw9kaCLoBXyBLJjXUXFkB+/eBNE7CsBAlBkxhJPhNjN3Oj/DiusXCAlnX+rM3i2wmGx6WgpUln3YD9fvtdpo=",
                      sessionToken:
                        type: string
                        example: QNOAу�����i�𽍴]�9K��p��Z
          description: The username or password is incorrect
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Username or password is incorrect"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid, or the user does not have access to perform the action
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unauthorized"
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Not Found"